name=postgres-sink-dn-collectors
connector.class=io.confluent.connect.jdbc.JdbcSinkConnector
topics.regex=^(processed_(zone|DNS|RDAP_DN|TLS)|collected_DN_data)$

connection.loginTimeout=10
connection.url=jdbc:postgresql://postgres:5432/domainradar
connection.user=connect
connection.password=$$PASS_DB_CONNECT$$
db.timezone=UTC

key.converter=cz.vut.fit.domainradar.connect.BytesConverter
value.converter=cz.vut.fit.domainradar.connect.BytesConverter

transforms=PostgresSinkTransformation
transforms.PostgresSinkTransformation.type=cz.vut.fit.domainradar.connect.PostgresCollectorResultSinkTransformation

insert.mode=insert
delete.enabled=false

batch.size=$$KC_OUT_BATCH_SIZE$$
tasks.max=$$KC_TASKS_MAX$$
errors.tolerance=all
errors.deadletterqueue.topic.name=connect_errors
errors.deadletterqueue.context.headers.enable=true
errors.log.enable=$$KC_LOG_ENABLE$$
errors.log.include.messages=true
errors.retry.timeout=5000
errors.retry.delay.max.ms=$$KC_RETRY_DELAY$$
max.retries=$$KC_MAX_RETRIES$$
retry.backoff.ms=$$KC_RETRY_DELAY$$

table.name.format=collection_results_dummy_target
pk.mode=record_key
pk.fields=domain_name,ip,collector,timestamp
fields.whitelist=status_code,error,raw_data
